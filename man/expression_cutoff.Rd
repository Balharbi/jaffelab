% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expression_cutoff.R
\name{expression_cutoff}
\alias{expression_cutoff}
\title{Find expression cutoffs}
\usage{
expression_cutoff(expr, max_cut = 1, seed = NULL, n.boot = 2000, k = 2)
}
\arguments{
\item{expr}{A matrix with the expression values with features in the rows and
samples in the columns in RPKM format.}

\item{max_cut}{Maximum expression cutoff to consider. Increasing this value 
does then to increase the suggested cutoffs. If set to \code{NULL}, this
will be chosen automatically from 1 to 5.}

\item{seed}{Set this argument for increased reproducibility of the results.
This is passed to \link[segmented]{seg.control}. We highly recommend
specifiying this value.}

\item{n.boot}{This argument controls the stability of the suggested cutoffs.
It is passed to \link[segmented]{seg.control}.}

\item{k}{The number of breakpoints to consider. If you increase this value
the estimated breakpoints are less stable.}
}
\value{
A two element vector with the suggested cutoffs based on the
number of features expressed and the mean number of expressed samples
across all features. The function also makes plots that visualize
both curves and show the identified breakpoints as vertical grey lines.
}
\description{
This function finds expression cutoffs based on estimating the second
breakpoint using \link[segmented]{segmented} applied to two curves. The
first curve is the number of features passing the cutoff assuming an initial
large drop, an intermediate section with moderate drop, and then a stable
tail. The second curve is the mean number of expressed samples (non-zero
expression) for all genes at each given cutoff. This curve increases rapidly
then has a section with a moderate increase, and finally a long tail. Using
\link{segmented}[segmented] we find that second breakpoint. The suggested
expression cutoff returned is the average of the two suggested cutoffs.
}
\examples{

## Simulate expression data. Based on the limma::lmFit() man page
sd <- 0.3*sqrt(4/rchisq(100,df=4))
y <- matrix(rnorm(100*6,sd=sd),100,6)
rownames(y) <- paste("Gene",1:100)
y[1:2,4:6] <- y[1:2,4:6] + 2

## Make the expression data look like RPKM values
y2 <- apply(y, 2, function(z) {
    res <- z + abs(min(z))
    res[sample(seq_len(100), 10)] <- 0
    res
})
summary(y2)

pdf('test_expression_cutoff.pdf', width = 12)
expression_cutoff(y2)
dev.off()

}
\author{
Leonardo Collado-Torres
}
